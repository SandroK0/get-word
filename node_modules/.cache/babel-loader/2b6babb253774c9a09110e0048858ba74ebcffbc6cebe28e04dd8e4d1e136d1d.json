{"ast":null,"code":"var _jsxFileName = \"/home/sandro/Desktop/get-word/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./App.css\";\nimport { wordsArray } from \"./data/words\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [current, setCurrent] = useState(wordsArray[Math.floor(Math.random() * wordsArray.length)]);\n  const [value, setValue] = useState(null);\n  const [score, setScore] = useState(0);\n  const [timer, setTimer] = useState(60);\n  const [gameStatus, setGameStatus] = useState(false);\n  if (current === value) {\n    setScore(score + 1);\n    setCurrent();\n    setValue('');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: \"GetWord\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: timer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"word\",\n        children: current\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        placeholder: \"type to start game\",\n        value: value,\n        onChange: event => {\n          setValue(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"restartBtn\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FLil1N3G/g2Q6n89A3lrnTILGrA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","wordsArray","useState","App","current","setCurrent","Math","floor","random","length","value","setValue","score","setScore","timer","setTimer","gameStatus","setGameStatus","event","target"],"sources":["/home/sandro/Desktop/get-word/src/App.tsx"],"sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { wordsArray } from \"./data/words\";\nimport { useState } from \"react\";\nimport { time } from \"console\";\n\nfunction App() {\n  const [current, setCurrent] = useState<any>(\n    wordsArray[Math.floor(Math.random() * wordsArray.length)]\n  );\n  const [value, setValue] = useState<any>(null);\n  const [score, setScore] = useState<number>(0);\n  const [timer, setTimer] = useState<number>(60);\n  const [gameStatus, setGameStatus] = useState<boolean>(false);\n\n  if (current === value){\n    setScore(score + 1)\n    setCurrent()\n    setValue('')\n  }\n\n  return (\n    <div className=\"App\">\n      <header>GetWord</header>\n      <h1>score: {score}</h1>\n      <div className=\"gameContainer\">\n        <div className=\"timer\">{timer}</div>\n        <label className=\"word\">{current}</label>\n        <input\n          className=\"input\"\n          placeholder=\"type to start game\"\n          value={value}\n          onChange={(event) => {\n            setValue(event.target.value);\n          }}\n        ></input>\n        <button className=\"restartBtn\">Reset</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAGjC,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGH,QAAQ,CACpCD,UAAU,CAACK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGP,UAAU,CAACQ,MAAM,CAAC,CAAC,CAC1D;EACD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAM,IAAI,CAAC;EAC7C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAS,CAAC,CAAC;EAC7C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAU,KAAK,CAAC;EAE5D,IAAIE,OAAO,KAAKM,KAAK,EAAC;IACpBG,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACnBP,UAAU,EAAE;IACZM,QAAQ,CAAC,EAAE,CAAC;EACd;EAEA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA,UAAQ;IAAO;MAAA;MAAA;MAAA;IAAA,QAAS,eACxB;MAAA,WAAI,SAAO,EAACC,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eACvB;MAAK,SAAS,EAAC,eAAe;MAAA,wBAC5B;QAAK,SAAS,EAAC,OAAO;QAAA,UAAEE;MAAK;QAAA;QAAA;QAAA;MAAA,QAAO,eACpC;QAAO,SAAS,EAAC,MAAM;QAAA,UAAEV;MAAO;QAAA;QAAA;QAAA;MAAA,QAAS,eACzC;QACE,SAAS,EAAC,OAAO;QACjB,WAAW,EAAC,oBAAoB;QAChC,KAAK,EAAEM,KAAM;QACb,QAAQ,EAAGQ,KAAK,IAAK;UACnBP,QAAQ,CAACO,KAAK,CAACC,MAAM,CAACT,KAAK,CAAC;QAC9B;MAAE;QAAA;QAAA;QAAA;MAAA,QACK,eACT;QAAQ,SAAS,EAAC,YAAY;QAAA,UAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACzC;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAlCQP,GAAG;AAAA,KAAHA,GAAG;AAoCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}